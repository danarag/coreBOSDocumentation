a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1464642312;s:8:"modified";i:1464642987;}s:7:"creator";s:10:"Joe Bordes";s:4:"user";s:9:"joebordes";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:9:"joebordes";s:10:"Joe Bordes";}s:5:"title";s:44:"How to add custom validations to your module";s:11:"description";a:2:{s:15:"tableofcontents";a:2:{i:0;a:4:{s:3:"hid";s:44:"how_to_add_custom_validations_to_your_module";s:5:"title";s:44:"How to add custom validations to your module";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:8:"examples";s:5:"title";s:8:"Examples";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:382:"How to add custom validations to your module

Each field in a module has two native types of validation:

	*  data type validation: when you define a field on a module you indicate the type that it is; integer, string, currency, date, ...  So when you are editing a record with that field on screen coreBOS will automatically insure that the value introduced is of the correct type.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1464642312;s:8:"modified";i:1464642987;}s:7:"creator";s:10:"Joe Bordes";s:4:"user";s:9:"joebordes";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:9:"joebordes";s:10:"Joe Bordes";}}}