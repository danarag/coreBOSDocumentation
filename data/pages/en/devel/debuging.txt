====== Debugging ======

=====PHP=====

  * Turn on log4php.debug library usage, in file config.performance.php <code>'LOG4PHP_DEBUG' => true,</code>
  * Set the log level, in file log4php.properties <code>log4php.rootLogger = DEBUG, A1</code>
  * The log files will be written in the **logs** directory. For the rootLogger it will be logs/vtigercrm.log
<WRAP center round important 70%>
Make sure logs/ folder has write access to apache server process owner.
</WRAP>

=====Database=====

  * Turn on debugging for ADODB instanced in include/database/PearDatabase (at end of file) <code>if(empty($adb)) {
 $adb = new PearDatabase();
 $adb->connect();
 // ADD THIS LINE
 $adb->setDebug(true);
}</code>

=====Smarty=====

  * In file, Smarty_setup.php add the following to class constructor function <code>function vtigerCRM_Smarty() {
 $this->Smarty();
 $this->template_dir = 'Smarty/templates';
 // ...
 // ADD THIS LINE
 $this->debugging = true;
}</code>

=====AJAX and Javascript=====
  * Chrome and Firefox have webdevelopers tools and firebug.
  * [[http://codex.wordpress.org/Using_Your_Browser_to_Diagnose_JavaScript_Errors#Step_3:_Diagnosis|Interesting explanation on how to see javascript errors]]

=====Webservice=====
  * What I usually do is edit the curl call and dump the raw result coming from coreBOS. Obviously the log4php system is also very useful in this case.
  * The exact code change is one of these two depending on POST or GET calls:

<code>diff --git a/vtwsclib/Net/curl_http_client.php b/vtwsclib/Net/curl_http_client.php
index c52dd76..a42eb3c 100644
--- a/vtwsclib/Net/curl_http_client.php
+++ b/vtwsclib/Net/curl_http_client.php
@@ -183,7 +183,7 @@ class Curl_HTTP_Client
 
 		//and finally send curl request
 		$result = curl_exec($this->ch);
-
+var_dump($result); // GET
 		if($this->has_error())
 		{
 			return false;
@@ -243,7 +243,7 @@ class Curl_HTTP_Client
 
 		//and finally send curl request
 		$result = curl_exec($this->ch);
-
+var_dump($result);  // POST
 		if($this->has_error())
 		{
 			return false;
</code>

Also, the ajax call in the browser can be seen and is very useful also to see the raw result (Firebug is your friend)

Additionally, one of our former team members {{:devel:patches:debug_webservices.diff|used this patch}}, which produces the error on screen or in the AJAX response.
=====Email=====

[[en:adminmanual:outgoingserver|Have a read here about how coreBOS outgoing email server works and how to configure it]].

To debug the outgoing email server the best is to activate PHPMailer debugging with the changes below and look in the //errmail.log// file that will be created in the root of your install.

{{:devel:patches:debugemail_corebos.diff|debugemail_corebos}}\\
<code>diff --git a/modules/Emails/class.phpmailer.php b/modules/Emails/class.phpmailer.php
index bc53eb2..9bb4d90 100755
--- a/modules/Emails/class.phpmailer.php
+++ b/modules/Emails/class.phpmailer.php
@@ -323,7 +323,7 @@ class PHPMailer
      * @var integer
      * @see SMTP::$do_debug
      */
-    public $SMTPDebug = 0;
+    public $SMTPDebug = 2;
 
     /**
      * How to handle debug output.
@@ -339,7 +339,7 @@ class PHPMailer
      * @var string|callable
      * @see SMTP::$Debugoutput
      */
-    public $Debugoutput = 'echo';
+    public $Debugoutput = 'error_log';
 
     /**
      * Whether to keep SMTP connection open after each message.
@@ -711,7 +711,7 @@ class PHPMailer
         switch ($this->Debugoutput) {
             case 'error_log':
                 //Don't output, just log
-                error_log($str);
+                error_log($str,3,'errmail.log');
                 break;
             case 'html':
                 //Cleans up output a bit for a better looking, HTML-safe output
diff --git a/modules/Emails/class.smtp.php b/modules/Emails/class.smtp.php
index f259df6..ff5f60a 100755
--- a/modules/Emails/class.smtp.php
+++ b/modules/Emails/class.smtp.php
@@ -109,7 +109,7 @@ class SMTP
      * * self::DEBUG_LOWLEVEL (`4`) Low-level data output, all messages
      * @var integer
      */
-    public $do_debug = self::DEBUG_OFF;
+    public $do_debug = self::DEBUG_CLIENT;
 
     /**
      * How to handle debug output.
@@ -212,7 +212,7 @@ class SMTP
         switch ($this->Debugoutput) {
             case 'error_log':
                 //Don't output, just log
-                error_log($str);
+                error_log($str,3,'errmail.log');
                 break;
             case 'html':
                 //Cleans up output a bit for a better looking, HTML-safe output
</code>

=====Frequent problems=====

??? Sorry! Attempt to access restricted file

!!! Make sure the webserver user has write permission in the //user_privileges// directory and that the new user's permission file is correct (it will be user_privileges_##.php and sharing_privileges_##.php).

If that is correct (most probably will be or you wouldn't get to this error) you will have to add some debug message to see exactly what file the application is looking for and can't find. That will be something like this:

[[https://github.com/tsolucio/corebos/commit/26cf68eb89b888aa71d99f3d0e1e5d48b6cf7081]]

